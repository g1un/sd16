Button(params)
	add-property('border-color', params['default']['background-color'])
	for propKey,propVal in params['default']
		add-property(propKey, propVal)

	&[data-button-mod*="border"]
		__prop = {
			'background-color': transparent,
			'color': params['default']['background-color']
		}
		if(params['border'] != null)
			for propKey,propVal in params['border']
				if((propKey != 'hover') && (propKey != 'active'))
					__prop[propKey] = propVal

		for propKey,propVal in __prop
			add-property(propKey, propVal)

		&:hover,
		&.-hover
			__hover = {
				'background-color': params['default']['background-color'],
				'border-color': params['default']['background-color']
			}
			if(params['border'] != null && params['border']['hover'] != null)
				for propKey,propVal in params['border']['hover']
					__hover[propKey] = propVal
			for propKey,propVal in __hover
				add-property(propKey, propVal)
		&:active,
		&.-active
			__active = {
				'background-color': params['active']['background-color'],
				'border-color': params['active']['background-color']
			}
			if(params['border'] != null && params['border']['active'] != null)
				for propKey,propVal in params['border']['active']
					__active[propKey] = propVal
			for propKey,propVal in __active
				add-property(propKey, propVal)

		&.__loading
			&:hover,
			&:active,
			&.-hover,
			&.-active
				for propKey,propVal in __prop
					add-property(propKey, propVal)


	&:hover
		add-property('border-color', params['hover']['background-color'])
		for propKey,propVal in params['hover']
			add-property(propKey, propVal)

	&:active
		add-property('border-color', params['active']['background-color'])
		for propKey,propVal in params['active']
			add-property(propKey, propVal)

	&.__loading
		&:hover,
		&:active,
		&.-hover,
		&.-active
			for propKey,propVal in params['default']
				add-property(propKey, propVal)

buttons = {
	default: {
		default: {
			background-color: MAIN_COLOR,
			color: #fff
		},
		hover: {
			background-color: (MAIN_COLOR + 20%),
			color: #fff
		},
		active: {
			background-color: (MAIN_COLOR - 20%),
			color: (#fff - 20%)
		},
		border: {
			border-color: MAIN_COLOR,
			color: MAIN_COLOR,
			hover: {
				background-color: (MAIN_COLOR + 20%),
				color: #fff,
				border-color: (MAIN_COLOR + 20%)
			},
			active: {
				background-color: (MAIN_COLOR - 20%),
				color: (#fff - 20%),
				border-color: (MAIN_COLOR - 20%)
			}
		}
	},
	gray: {
		default: {
			background-color: #f0f0f0,
			color: #232834
		},
		hover: {
			background-color: #f0f0f0 + 40%,
			color: #232834
		},
		active: {
			background-color: #f0f0f0 - 20%,
			color: #232834 - 20%
		},
		border: {
			border-color: #bcc4d3,
			color: #232834,
			hover: {
				background-color: #f0f0f0 + 40%,
				color: #232834,
				border-color: #f0f0f0 + 40%
			},
			active: {
				background-color: #f0f0f0 - 20%,
				color: #232834 - 20%,
				border-color: #f0f0f0 - 20%
			}
		}
	},
	darkgray: {
		default: {
			background-color: #acacac,
			color: #fff
		},
		hover: {
			background-color: #acacac + 20%,
			color: #fff
		},
		active: {
			background-color: #acacac - 20%,
			color: #ccc
		},
		border: {
			border-color: #acacac - 20%,
			color: #acacac - 20%,
			hover: {
				background-color: #acacac + 20%,
				color: #fff,
				border-color: #acacac + 20%
			},
			active: {
				background-color: #acacac - 20%,
				color: #ccc,
				border-color: #acacac - 20%
			}
		}
	},
	black: {
		default: {
			background-color: rgba(#09151b, 1),
			color: #fff,
			border-color: transparent
		},
		hover: {
			background-color: rgba(#09151b + 20%, 1),
			color: #fff,
			border-color: transparent
		},
		active: {
			background-color: rgba(#09151b - 20%, 1),
			color: #fff - 20%,
			border-color: transparent
		},
		border: {
			border-color: rgba(#09151b, 1),
			color: rgba(#09151b, 1),
			hover: {
				background-color: rgba(#09151b + 20%, 1),
				color: #fff,
				border-color: rgba(#09151b + 20%, 1)
			},
			active: {
				background-color: rgba(#09151b - 20%, 1),
				color: #fff - 20%,
				border-color: rgba(#09151b - 20%, 1)
			}
		}
	},
	transparent-black: {
		default: {
			background-color: rgba(#09151b, 0.6),
			color: #fff,
			border-color: transparent
		},
		hover: {
			background-color: rgba(#09151b + 20%, 0.6),
			color: #fff,
			border-color: transparent
		},
		active: {
			background-color: rgba(#09151b - 20%, 0.6),
			color: #fff - 20%,
			border-color: transparent
		},
		border: {
			border-color: rgba(#09151b, 0.6),
			color: rgba(#09151b, 0.6),
			hover: {
				background-color: rgba(#09151b + 20%, 0.6),
				color: #fff,
				border-color: rgba(#09151b + 20%, 0.6)
			},
			active: {
				background-color: rgba(#09151b - 20%, 0.6),
				color: #fff - 20%,
				border-color: rgba(#09151b - 20%, 0.6)
			}
		}
	},
	style2: {
		default: {
			background-color: #f9a62c,
			color: #000
		},
		hover: {
			background-color: (#f9a62c + 20%),
			color: #000
		},
		active: {
			background-color: (#f9a62c - 20%),
			color: (#000 + 20%)
		},
		border: {
			border-color: #f9a62c,
			color: #f9a62c,
			hover: {
				background-color: (#f9a62c + 20%),
				color: #000,
				border-color: (#f9a62c + 20%)
			},
			active: {
				background-color: (#f9a62c - 20%),
				color: (#000 + 20%),
				border-color: (#f9a62c - 20%)
			}
		}
	}
}

VARS_ADD('BUTTONS', buttons)

main
	[data-button],
	.button
		reset-button()
		trans()



		&[disabled],
		&.disabled
			background (#f2f2f2 - 5%) !important
			color rgba(0, 0, 0, 0.4) !important
			cursor default !important
			border-color transparent !important
			text-shadow 1px 1px 0 rgba(255, 255, 255, 1)
			box-shadow inset 1px 1px 0 rgba(0, 0, 0, 0.1)

		border 1px solid transparent

		_inputSize = getInputSize( INPUT_SIZE['default'] );
		_paddingTop = (_inputSize['padding-top'] - 1px);
		_paddingBottom = (_inputSize['padding-bottom'] - 1px);
		
		getValue(val, _name)
			return val[_name]

		font-size getValue(_inputSize, 'font-size')
		line-height getValue(_inputSize, 'height') - (_paddingTop + _paddingBottom + 2)
		padding (_paddingTop) (30px) (_paddingBottom)

		max-width 100%
		
		text-transform uppercase

		font-weight 700

		> *
			display inline-block
			vertical-align middle

		img:first-child,
		i:first-child
			margin-right 10px
		img:last-child,
		i:last-child
			margin-left 10px
		img:last-child:first-child,
		i:last-child:first-child
			margin 0

		img,
		img + *
			display inline-block
			vertical-align middle
		img
			trans()
			transition-property opacity
			max-height (24px)

		img:last-child:first-child
			margin 0

		&:active,
		&.-active
			box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15) inset
			img
				opacity 0.7

		background-position center
		background-repeat no-repeat

	for buttonName, buttonParams in buttons
		if buttonName == 'default'
			buttonName = ''
			[data-button],
			.button
				Button(buttonParams)
		else
			[data-button={ '"' + buttonName + '"' }]
				Button(buttonParams)

	[data-button]
		&.__loading
			background-image images('preloader-48.gif')
			background-color #fff !important
			color transparent !important
			background-size auto 50%
			// pointer-events none
			cursor progress

	[data-button-mod*="wide"]
		padding _ (50px)


	[data-button-size="small"]
		padding (8px) (20px)
		font-size (12px)
		line-height (14px)
		font-weight 500
		img
			max-height (13px)

		img:first-child,
		i:first-child
			margin-right 3px
		img:last-child,
		i:last-child
			margin-left 3px
		img:last-child:first-child,
		i:last-child:first-child
			margin 0
		&[data-button-mod*="wide"]
			padding _ 30px

	[data-button-size="middle"]
		font-size 10px
		line-height 12px
		padding 17px 30px 16px
		font-weight 900
		&[data-button-mod*="wide"]
			padding _ 40px

	[data-button-size="big"]
		font-size 18px
		line-height 24px
		padding 23px 30px
		font-weight 900
		img
			max-height 24px
		&[data-button-mod*="wide"]
			padding _ 40px
		+MEDIA("SMALL_PHONE")
			font-size 16px
			line-height 22px
			padding 15px 25px
			&[data-button-mod*="wide"]
				padding _ 35px

	[data-button-size="huge"]
		font-size 18px
		line-height 24px
		padding 27px 40px
		font-weight 900
		img
			max-height 24px
		&[data-button-mod*="wide"]
			padding _ 45px
		+MEDIA("SMALL_PHONE")
			font-size 16px
			line-height 22px
			padding 20px 30px
			&[data-button-mod*="wide"]
				padding _ 40px

	[data-button-mod*="border"]
		border-style solid


	[data-button="reset"]
		padding _ 15px
		&:after
			content ''
			display inline-block
			vertical-align baseline
			size 8px
			background images('icons/reset.png') center no-repeat
			margin-left 8px

	+MEDIA("SMALL_DESKTOP")
		[data-button-size="huge"]
			padding _ 35px
			&[data-button-mod*="wide"]
				padding _ 40px